{"version":3,"file":"static/js/128.8489d86e.chunk.js","mappings":"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","sources":["hooks/redux.js","components/ButtonGroup/ButtonGroup.jsx","components/NumberOfPages/NumberOfPages.jsx","components/CustomToggle/CustomToggle.jsx","components/Modal/Modal.jsx","components/Icon/Icon.jsx","components/Modal/CustomModal.jsx","components/MyCard/MyCard.jsx","components/MyDropDown/MyDropDown.jsx","components/NewUserForm/NewUserForm.jsx","pages/PostsPage.jsx"],"sourcesContent":["import { useDispatch, TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { AppDispatch, RootState } from '../store/store';\r\n\r\nexport const useAppDispatch = () => useDispatch();\r\nexport const useAppSelector = useSelector;\r\n","import React from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst ButtonGroup = ({ handleClick }) => {\r\n    return (\r\n        <>\r\n            <InputGroup className='mt-3' style={{ justifyContent: 'center' }}>\r\n\r\n                <Button variant='outline-secondary' value={10} onClick={(e) => handleClick(e)}>\r\n                    10\r\n                </Button>\r\n                <Button variant='outline-secondary' value={20} onClick={(e) => handleClick(e)}>\r\n                    20\r\n                </Button>\r\n                <Button variant='outline-secondary' value={50} onClick={(e) => handleClick(e)}>\r\n                    50\r\n                </Button>\r\n                <Button variant='outline-secondary' value={100} onClick={(e) => handleClick(e)}>\r\n                    100\r\n                </Button>\r\n                <Button variant='outline-secondary' value={100} onClick={(e) => handleClick(e)}>\r\n                    All\r\n                </Button>\r\n            </InputGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonGroup","import React, { useState, useEffect } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\n\r\n\r\nconst NumberOfPages = ({ pages, limit, handleClickLimit }) => {\r\n\r\n\r\n    const renderButtons = () => {\r\n        const buttons = Array.from({ length: pages }, (x, i) => (\r\n            <Button variant='outline-secondary' key={i} data-id={(i) * limit} onClick={(e) => handleClickLimit(e)}>{i + 1}</Button>\r\n        ));\r\n        return <>{buttons}</>;\r\n    };\r\n\r\n\r\n    const buttons = renderButtons()\r\n\r\n    return (\r\n        <>\r\n            <h3 style={{ textAlign: 'center', marginTop: '1rem' }}>Pages</h3>\r\n            <ButtonToolbar style={{ justifyContent: 'center' }} className=\"mt-3\" aria-label=\"Toolbar with Button groups\">\r\n                <ButtonGroup className=\"me-2\" aria-label=\"First group\">\r\n                    {buttons}\r\n                </ButtonGroup>\r\n            </ButtonToolbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NumberOfPages","import React, { useState } from 'react';\r\nimport { useAccordionButton } from 'react-bootstrap/AccordionButton';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst CustomToggle = ({ children, eventKey, id, setComment }) => {\r\n\r\n    const [variant, setVariant] = useState('secondary');\r\n\r\n    const decoratedOnClick = useAccordionButton(eventKey, (e) => {\r\n        setVariant(variant === 'secondary' ? 'secondary-outlined' : 'secondary')\r\n        const value = e.currentTarget.dataset.id;\r\n        setComment(value)\r\n    }\r\n    );\r\n\r\n    return (\r\n        <Button\r\n            type=\"button\"\r\n            variant={variant}\r\n            onClick={decoratedOnClick}\r\n            data-id={id}\r\n        >\r\n            {children}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default CustomToggle;","import React from 'react'\r\nimport { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst MyModal = ({ onRemove, id }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleRemove = (e) => {\r\n        setShow(false)\r\n        onRemove(e)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"secondary\" onClick={handleShow}>\r\n                Remove\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Are you sure you want to delete?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" data-id={id} onClick={handleRemove}>\r\n                        Remove\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyModal","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Icon = ({ postId, elected, setElected, setSelected, onElected, selected }) => {\r\n\r\n\r\n\r\n    const ref = useRef([])\r\n\r\n    useEffect(() => {\r\n        setElected(localStorage.getItem(postId))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setSelected(selected => !selected)\r\n    }, [elected])\r\n\r\n    // const onElected = (e) => {\r\n    //     setElected((elected) => {\r\n    //         return !elected\r\n    //     })\r\n    //     const value = e.currentTarget.dataset.id\r\n    //     e.currentTarget.dataset.elected = selected\r\n    //     localStorage.getItem(value) !== null ? localStorage.removeItem(value) : localStorage.setItem(value, selected);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <Button ref={ref} variant=\"secondary\" data-elected={selected} onClick={(e) => { onElected(e) }} data-id={postId}>\r\n                {elected ? <FontAwesomeIcon icon={faStar} style={{ color: \"#ffec70\" }} />\r\n                    : <FontAwesomeIcon icon={faStar} style={{ color: \"#ffffff\" }} />}\r\n\r\n            </Button >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst CustomModal = ({ onVisible, removeGroup, onElected }) => {\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"modal show\"\r\n            style={{ display: 'block', position: 'initial' }}\r\n        >\r\n            <Modal.Dialog style={{ position: 'absolute', width: '25rem', height: '15rem', top: '150px', left: '15%' }}>\r\n                <Modal.Header closeButton onClick={() => onVisible()}>\r\n                    <Modal.Title>Are you sure ?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => onVisible()}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={(e) => { removeGroup(); onElected(e) }} >Accept</Button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomModal","import React, { useState, useEffect } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport CustomToggle from '../../components/CustomToggle/CustomToggle';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Icon from '../../components/Icon/Icon';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\r\nimport {  fetchComments } from '../../store/reducers/ActionCreators';\r\nimport CustomModal from '../Modal/CustomModal';\r\n\r\nconst MyCard = ({ postId, postTitle, postBody, postComments, contentEditable, setContentEditable, setPostsLocal, postsLocal, setRemove, removeGroup, id, setId }) => {\r\n\r\n    const [checked, setChecked] = useState(false)\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [elected, setElected] = useState(false);\r\n    const [selected, setSelected] = useState(false)\r\n\r\n    const [comment, setComment] = useState(0)\r\n    const { comments, isLoadingComments } = useAppSelector((state) => state.commentsReducer);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchComments(comment));\r\n    }, [comment])\r\n\r\n    const editable = () => {\r\n        setContentEditable(contentEditable => !contentEditable)\r\n    }\r\n\r\n    const onRemove = (e) => {\r\n        setPostsLocal(postsLocal.filter((post) => post.id !== +e.currentTarget.dataset.id))\r\n    }\r\n\r\n    const onChecked = (e) => {\r\n        setChecked(checked => !checked)\r\n        setId([...id, e.currentTarget.dataset.id])\r\n    }\r\n\r\n    const onVisibleRemove = () => {\r\n        setIsVisible(isVisible => !isVisible)\r\n        setRemove(true)\r\n    }\r\n\r\n    const onVisible = () => {\r\n        setIsVisible(isVisible => !isVisible)\r\n    }\r\n\r\n    const onElected = (e) => {\r\n        setElected((elected) => {\r\n            return !elected\r\n        })\r\n        const value = e.currentTarget.dataset.id\r\n        e.currentTarget.dataset.elected = selected\r\n        localStorage.getItem(value) !== null ? localStorage.removeItem(value) : localStorage.setItem(value, selected);\r\n        setIsVisible(false)\r\n        setChecked(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <Card key={postId} className='mt-3' style={elected ? { background: 'grey' } : { background: 'transparent' }}>\r\n            <Card.Body>\r\n                <Card.Title><span contentEditable={contentEditable}>{postId}. {postTitle}</span></Card.Title>\r\n                <Card.Text><span contentEditable={contentEditable}>Text: {postBody}</span></Card.Text>\r\n                <div style={{ display: 'flex', gap: '1rem' }}>\r\n                    <CustomToggle eventKey={postId} id={postId} setComment={setComment}>Comments</CustomToggle>\r\n                    <Button variant=\"secondary\" onClick={editable}>Edit</Button>\r\n                    <Modal id={postId} onRemove={onRemove}></Modal>\r\n                    <Icon postId={postId} elected={elected} setElected={setElected} setSelected={setSelected} selected={selected} onElected={onElected} />\r\n                    <Form.Check data-id={postId} data-elected={selected} aria-label=\"option 1\" className='mt-2' onClick={onChecked} />\r\n                    {checked ? <><Button variant=\"secondary\" setRemove={setRemove} data-id={postId} onClick={onVisibleRemove}>Remove</Button>\r\n                        <Button variant=\"secondary\" data-id={postId} onClick={onVisible}>Select</Button>\r\n                    </> : null}\r\n                    {isVisible ? <CustomModal removeGroup={removeGroup} onVisible={onVisible} onElected={onElected}></CustomModal> : null}\r\n                </div>\r\n            </Card.Body>\r\n            {postComments.map((comment) => (\r\n                <Accordion.Collapse eventKey={postId} key={comment.id}>\r\n                    <Card.Body>Name: {comment.name}<br />Email: {comment.email}<br />Text: {comment.body}</Card.Body>\r\n                </Accordion.Collapse>\r\n            ))}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default MyCard","import React from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst MyDropDown = ({ sortByIdDown, sortByIdUp, sortByUserNameDown, sortByUserNameUp }) => {\r\n\r\n\r\n    return (\r\n        <Dropdown className='mt-3'>\r\n            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                Post sorting\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => sortByIdDown()} href=\"#\">By id down</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => sortByIdUp()} href=\"#\">By id up</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => sortByUserNameDown()} href=\"#\">By user name down</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => sortByUserNameUp()} href=\"#\">By user name up</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nexport default MyDropDown","import React from 'react'\r\nimport { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst NewUserForm = ({ usersLocal, setUsersLocal, postsLocal, setPostsLocal }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [userName, setUserName] = useState('')\r\n    const [post, setPost] = useState({ postTitle: '', postText: '' })\r\n\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false)\r\n\r\n    const handleSave = () => {\r\n        const { postTitle, postText } = post;\r\n        setShow(false)\r\n        setUsersLocal([...usersLocal, { id: usersLocal.length + 1, name: userName, email: `${userName}@gmail.com` }])\r\n        setPostsLocal([...postsLocal, { userId: usersLocal.length + 1, id: postsLocal.length + 1, title: postTitle, body: postText }])\r\n        setUserName(null)\r\n        setPost({ postTitle: null, postText: null })\r\n    };\r\n\r\n    const onChangeUserName = (e) => {\r\n        setUserName(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeTitle = (e) => {\r\n        setPost({ ...post, postTitle: e.currentTarget.value })\r\n    }\r\n\r\n    const onChangeText = (e) => {\r\n        setPost({ ...post, postText: e.currentTarget.value })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"secondary\" onClick={handleShow} className='mt-3'>\r\n                Create new post\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose} animation={false}>\r\n                <Modal.Header closeButton></Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Select aria-label=\"Default select example\" onChange={(e) => onChangeUserName(e)}>\r\n                        <option>Select user</option>\r\n                        {usersLocal.map((item) => {\r\n                            return (\r\n                                <option key={item.id} value={item.name} >{item.name}</option>\r\n                            )\r\n                        })}\r\n                    </Form.Select>\r\n                    <Form.Control\r\n                        placeholder=\"Post Title\"\r\n                        aria-label=\"Post Title\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        defaultValue={post.postTitle}\r\n                        onChange={(e) => onChangeTitle(e)}\r\n                    />\r\n                    <Form.Control\r\n                        placeholder=\"Post text\"\r\n                        aria-label=\"Post text\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        defaultValue={post.postText}\r\n                        onChange={(e) => onChangeText(e)}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewUserForm","import React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\r\nimport { fetchPosts, fetchUsers } from '../store/reducers/ActionCreators';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Container } from 'react-bootstrap';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ButtonGroup from '../components/ButtonGroup/ButtonGroup';\r\nimport NumberOfPages from '../components/NumberOfPages/NumberOfPages';\r\nimport MySpinner from '../components/MySpinner/MySpinner';\r\nimport MyCard from '../components/MyCard/MyCard';\r\nimport MyDropDown from '../components/MyDropDown/MyDropDown';\r\nimport NewUserForm from '../components/NewUserForm/NewUserForm';\r\n\r\nconst PostsPage = () => {\r\n\tconst [limit, setLimit] = useState(100);\r\n\r\n\tconst [postsLocal, setPostsLocal] = useState([])\r\n\tconst [usersLocal, setUsersLocal] = useState([])\r\n\tconst [contentEditable, setContentEditable] = useState(false)\r\n\tconst [pages, setPages] = useState(1)\r\n\tconst [countPosts, setCountPosts] = useState(0)\r\n\tconst [filter, setFilter] = useState(null)\r\n\tconst [id, setId] = useState([])\r\n\tconst [remove, setRemove] = useState(false)\r\n\r\n\tconst { comments, isLoadingComments } = useAppSelector((state) => state.commentsReducer);\r\n\tconst { posts, isLoading, error } = useAppSelector((state) => state.postReducer);\r\n\tconst { users } = useAppSelector((state) => state.userReducer);\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchPosts());\r\n\t\tdispatch(fetchUsers());\r\n\t\tsetLimit(Number(localStorage.getItem('limit')));\r\n\t\tsetFilter(Number(localStorage.getItem('filter')))\r\n\t}, []);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) {\r\n\t\t\tsetPostsLocal(posts)\r\n\t\t\tsetUsersLocal(users)\r\n\t\t}\r\n\t}, [isLoading])\r\n\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tconst value = e.target.value;\r\n\t\tsetLimit(value);\r\n\t\tsetFilter(value)\r\n\t\tlocalStorage.setItem('limit', value);\r\n\t\tlocalStorage.setItem('filter', value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst value = posts.length / Number(limit)\r\n\t\tsetPages(value)\r\n\t}, [posts, limit])\r\n\r\n\tconst handleClickLimit = (e) => {\r\n\t\tconst value = e.currentTarget.dataset.id\r\n\t\tsetCountPosts(e.currentTarget.dataset.id)\r\n\t\tsetFilter(+ limit * Number((+value + +limit) / limit))\r\n\t}\r\n\r\n\tconst removeGroup = () => {\r\n\t\tconst filter = postsLocal.filter((post) =>\r\n\t\t\tid.every((id) => post.id !== +id))\r\n\t\tif (remove) {\r\n\t\t\tsetRemove(false)\r\n\t\t\treturn setPostsLocal(filter)\r\n\t\t} else {\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n\r\n\tconst sortByIdDown = () => {\r\n\t\tsetUsersLocal([...usersLocal].sort((a, b) => b.id - a.id))\r\n\t\tsetPostsLocal([...postsLocal].sort((a, b) => b.id - a.id))\r\n\t}\r\n\r\n\tconst sortByIdUp = () => {\r\n\t\tsetUsersLocal([...usersLocal].sort((a, b) => a.id - b.id))\r\n\t\tsetPostsLocal([...postsLocal].sort((a, b) => a.id - b.id))\r\n\t}\r\n\r\n\tconst sortByUserNameDown = () => {\r\n\t\tsetUsersLocal([...usersLocal].sort((a, b) => b.name.localeCompare(a.name)))\r\n\t}\r\n\r\n\tconst sortByUserNameUp = () => {\r\n\t\tsetUsersLocal([...usersLocal].sort((a, b) => a.name.localeCompare(b.name)))\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h2 style={{ textAlign: 'center' }}>Number of posts</h2>\r\n\t\t\t<ButtonGroup handleClick={handleClick} />\r\n\t\t\t<NumberOfPages postsLocal={postsLocal} limit={limit} pages={pages} setPages={setPages} countPosts={countPosts} setCountPosts={setCountPosts} setLimit={setLimit} handleClickLimit={handleClickLimit} />\r\n\t\t\t<MyDropDown className='mt-3' sortByIdDown={sortByIdDown} sortByIdUp={sortByIdUp} postsLocal={postsLocal} sortByUserNameDown={sortByUserNameDown} sortByUserNameUp={sortByUserNameUp}></MyDropDown>\r\n\t\t\t<NewUserForm usersLocal={usersLocal} setUsersLocal={setUsersLocal} postsLocal={postsLocal} setPostsLocal={setPostsLocal} />\r\n\t\t\t<CardGroup >\r\n\t\t\t\t{isLoadingComments || isLoading ? <MySpinner /> : null}\r\n\t\t\t\t<>\r\n\t\t\t\t\t{postsLocal ? usersLocal.slice(Number(countPosts) / 10, Number(filter) / 10).map((user) => {\r\n\t\t\t\t\t\tconst userPosts = postsLocal.slice(Number(countPosts), Number(filter)).filter((post) => post.userId === user.id);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={user.id}>\r\n\t\t\t\t\t\t\t\t<Card.Title className='mb-3 mt-3'><span contentEditable={contentEditable}>Username: {user.name}</span></Card.Title>\r\n\t\t\t\t\t\t\t\t{userPosts.map((post) => {\r\n\t\t\t\t\t\t\t\t\tconst postComments = comments.filter((comment) => comment.postId === post.id)\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Accordion defaultActiveKey=\"0\" key={post.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<MyCard postId={post.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserPosts={userPosts}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpostTitle={post.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpostComments={postComments}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpostBody={post.body}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetContentEditable={setContentEditable}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontentEditable={contentEditable}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpostsLocal={postsLocal}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetPostsLocal={setPostsLocal}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetId={setId}\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveGroup={removeGroup}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetRemove={setRemove} />\r\n\t\t\t\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}) : null}\r\n\r\n\t\t\t\t</>\r\n\r\n\t\t\t</CardGroup>\r\n\t\t</Container >\r\n\t);\r\n};\r\n\r\nexport default PostsPage;\r\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","_ref","handleClick","_jsx","_Fragment","children","_jsxs","InputGroup","className","style","justifyContent","Button","variant","value","onClick","e","pages","limit","handleClickLimit","buttons","Array","from","length","x","i","renderButtons","textAlign","marginTop","ButtonToolbar","ButtonGroup","eventKey","id","setComment","_useState","useState","_useState2","_slicedToArray","setVariant","decoratedOnClick","useAccordionButton","currentTarget","dataset","type","onRemove","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Footer","postId","elected","setElected","setSelected","onElected","selected","ref","useRef","useEffect","localStorage","getItem","FontAwesomeIcon","icon","faStar","color","onVisible","removeGroup","display","position","Dialog","width","height","top","left","postTitle","postBody","postComments","contentEditable","setContentEditable","setPostsLocal","postsLocal","setRemove","setId","checked","setChecked","_useState3","_useState4","isVisible","setIsVisible","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","comment","_useAppSelector","state","commentsReducer","dispatch","comments","isLoadingComments","fetchComments","removeItem","setItem","Card","background","Body","Text","gap","CustomToggle","filter","post","Icon","Form","Check","concat","_toConsumableArray","CustomModal","map","Accordion","Collapse","name","email","body","sortByIdDown","sortByIdUp","sortByUserNameDown","sortByUserNameUp","Dropdown","Toggle","Menu","Item","href","usersLocal","setUsersLocal","userName","setUserName","postText","setPost","animation","Select","onChange","onChangeUserName","item","Control","placeholder","defaultValue","_objectSpread","onChangeTitle","onChangeText","userId","title","setLimit","setPages","_useState11","_useState12","countPosts","setCountPosts","_useState13","_useState14","setFilter","_useState15","_useState16","_useState17","_useState18","remove","_useAppSelector2","postReducer","posts","isLoading","users","error","userReducer","fetchPosts","fetchUsers","Number","every","Container","target","NumberOfPages","MyDropDown","sort","a","b","localeCompare","NewUserForm","CardGroup","MySpinner","slice","user","userPosts","defaultActiveKey","MyCard"],"sourceRoot":""}